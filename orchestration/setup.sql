CREATE temp table if not exists scada_temp (
    UNIT VARCHAR,
    DUID VARCHAR,
    VERSION DOUBLE,
    RUNNO DOUBLE,
    INTERVENTION DOUBLE,
    DISPATCHMODE DOUBLE,
    AGCSTATUS DOUBLE,
    INITIALMW DOUBLE,
    TOTALCLEARED DOUBLE,
    RAMPDOWNRATE DOUBLE,
    RAMPUPRATE DOUBLE,
    LOWER5MIN DOUBLE,
    LOWER60SEC DOUBLE,
    LOWER6SEC DOUBLE,
    RAISE5MIN DOUBLE,
    RAISE60SEC DOUBLE,
    RAISE6SEC DOUBLE,
    MARGINAL5MINVALUE DOUBLE,
    MARGINAL60SECVALUE DOUBLE,
    MARGINAL6SECVALUE DOUBLE,
    MARGINALVALUE DOUBLE,
    VIOLATION5MINDEGREE DOUBLE,
    VIOLATION60SECDEGREE DOUBLE,
    VIOLATION6SECDEGREE DOUBLE,
    VIOLATIONDEGREE DOUBLE,
    LOWERREG DOUBLE,
    RAISEREG DOUBLE,
    AVAILABILITY DOUBLE,
    RAISE6SECFLAGS DOUBLE,
    RAISE60SECFLAGS DOUBLE,
    RAISE5MINFLAGS DOUBLE,
    RAISEREGFLAGS DOUBLE,
    LOWER6SECFLAGS DOUBLE,
    LOWER60SECFLAGS DOUBLE,
    LOWER5MINFLAGS DOUBLE,
    LOWERREGFLAGS DOUBLE,
    RAISEREGAVAILABILITY DOUBLE,
    RAISEREGENABLEMENTMAX DOUBLE,
    RAISEREGENABLEMENTMIN DOUBLE,
    LOWERREGAVAILABILITY DOUBLE,
    LOWERREGENABLEMENTMAX DOUBLE,
    LOWERREGENABLEMENTMIN DOUBLE,
    RAISE6SECACTUALAVAILABILITY DOUBLE,
    RAISE60SECACTUALAVAILABILITY DOUBLE,
    RAISE5MINACTUALAVAILABILITY DOUBLE,
    RAISEREGACTUALAVAILABILITY DOUBLE,
    LOWER6SECACTUALAVAILABILITY DOUBLE,
    LOWER60SECACTUALAVAILABILITY DOUBLE,
    LOWER5MINACTUALAVAILABILITY DOUBLE,
    LOWERREGACTUALAVAILABILITY DOUBLE,
    week DOUBLE,
    file VARCHAR,
    SETTLEMENTDATE TIMESTAMPTZ,
    date DATE,
    YEAR BIGINT
);
CREATE TEMP TABLE IF NOT EXISTS price_temp(
    UNIT VARCHAR,
    REGIONID VARCHAR,
    "VERSION" DOUBLE,
    RUNNO DOUBLE,
    INTERVENTION DOUBLE,
    RRP DOUBLE,
    EEP DOUBLE,
    ROP DOUBLE,
    APCFLAG DOUBLE,
    MARKETSUSPENDEDFLAG DOUBLE,
    TOTALDEMAND DOUBLE,
    DEMANDFORECAST DOUBLE,
    DISPATCHABLEGENERATION DOUBLE,
    DISPATCHABLELOAD DOUBLE,
    NETINTERCHANGE DOUBLE,
    EXCESSGENERATION DOUBLE,
    LOWER5MINDISPATCH DOUBLE,
    LOWER5MINIMPORT DOUBLE,
    LOWER5MINLOCALDISPATCH DOUBLE,
    LOWER5MINLOCALPRICE DOUBLE,
    LOWER5MINLOCALREQ DOUBLE,
    LOWER5MINPRICE DOUBLE,
    LOWER5MINREQ DOUBLE,
    LOWER5MINSUPPLYPRICE DOUBLE,
    LOWER60SECDISPATCH DOUBLE,
    LOWER60SECIMPORT DOUBLE,
    LOWER60SECLOCALDISPATCH DOUBLE,
    LOWER60SECLOCALPRICE DOUBLE,
    LOWER60SECLOCALREQ DOUBLE,
    LOWER60SECPRICE DOUBLE,
    LOWER60SECREQ DOUBLE,
    LOWER60SECSUPPLYPRICE DOUBLE,
    LOWER6SECDISPATCH DOUBLE,
    LOWER6SECIMPORT DOUBLE,
    LOWER6SECLOCALDISPATCH DOUBLE,
    LOWER6SECLOCALPRICE DOUBLE,
    LOWER6SECLOCALREQ DOUBLE,
    LOWER6SECPRICE DOUBLE,
    LOWER6SECREQ DOUBLE,
    LOWER6SECSUPPLYPRICE DOUBLE,
    RAISE5MINDISPATCH DOUBLE,
    RAISE5MINIMPORT DOUBLE,
    RAISE5MINLOCALDISPATCH DOUBLE,
    RAISE5MINLOCALPRICE DOUBLE,
    RAISE5MINLOCALREQ DOUBLE,
    RAISE5MINPRICE DOUBLE,
    RAISE5MINREQ DOUBLE,
    RAISE5MINSUPPLYPRICE DOUBLE,
    RAISE60SECDISPATCH DOUBLE,
    RAISE60SECIMPORT DOUBLE,
    RAISE60SECLOCALDISPATCH DOUBLE,
    RAISE60SECLOCALPRICE DOUBLE,
    RAISE60SECLOCALREQ DOUBLE,
    RAISE60SECPRICE DOUBLE,
    RAISE60SECREQ DOUBLE,
    RAISE60SECSUPPLYPRICE DOUBLE,
    RAISE6SECDISPATCH DOUBLE,
    RAISE6SECIMPORT DOUBLE,
    RAISE6SECLOCALDISPATCH DOUBLE,
    RAISE6SECLOCALPRICE DOUBLE,
    RAISE6SECLOCALREQ DOUBLE,
    RAISE6SECPRICE DOUBLE,
    RAISE6SECREQ DOUBLE,
    RAISE6SECSUPPLYPRICE DOUBLE,
    AGGREGATEDISPATCHERROR DOUBLE,
    AVAILABLEGENERATION DOUBLE,
    AVAILABLELOAD DOUBLE,
    INITIALSUPPLY DOUBLE,
    CLEAREDSUPPLY DOUBLE,
    LOWERREGIMPORT DOUBLE,
    LOWERREGLOCALDISPATCH DOUBLE,
    LOWERREGLOCALREQ DOUBLE,
    LOWERREGREQ DOUBLE,
    RAISEREGIMPORT DOUBLE,
    RAISEREGLOCALDISPATCH DOUBLE,
    RAISEREGLOCALREQ DOUBLE,
    RAISEREGREQ DOUBLE,
    RAISE5MINLOCALVIOLATION DOUBLE,
    RAISEREGLOCALVIOLATION DOUBLE,
    RAISE60SECLOCALVIOLATION DOUBLE,
    RAISE6SECLOCALVIOLATION DOUBLE,
    LOWER5MINLOCALVIOLATION DOUBLE,
    LOWERREGLOCALVIOLATION DOUBLE,
    LOWER60SECLOCALVIOLATION DOUBLE,
    LOWER6SECLOCALVIOLATION DOUBLE,
    RAISE5MINVIOLATION DOUBLE,
    RAISEREGVIOLATION DOUBLE,
    RAISE60SECVIOLATION DOUBLE,
    RAISE6SECVIOLATION DOUBLE,
    LOWER5MINVIOLATION DOUBLE,
    LOWERREGVIOLATION DOUBLE,
    LOWER60SECVIOLATION DOUBLE,
    LOWER6SECVIOLATION DOUBLE,
    RAISE6SECRRP DOUBLE,
    RAISE6SECROP DOUBLE,
    RAISE6SECAPCFLAG DOUBLE,
    RAISE60SECRRP DOUBLE,
    RAISE60SECROP DOUBLE,
    RAISE60SECAPCFLAG DOUBLE,
    RAISE5MINRRP DOUBLE,
    RAISE5MINROP DOUBLE,
    RAISE5MINAPCFLAG DOUBLE,
    RAISEREGRRP DOUBLE,
    RAISEREGROP DOUBLE,
    RAISEREGAPCFLAG DOUBLE,
    LOWER6SECRRP DOUBLE,
    LOWER6SECROP DOUBLE,
    LOWER6SECAPCFLAG DOUBLE,
    LOWER60SECRRP DOUBLE,
    LOWER60SECROP DOUBLE,
    LOWER60SECAPCFLAG DOUBLE,
    LOWER5MINRRP DOUBLE,
    LOWER5MINROP DOUBLE,
    LOWER5MINAPCFLAG DOUBLE,
    LOWERREGRRP DOUBLE,
    LOWERREGROP DOUBLE,
    LOWERREGAPCFLAG DOUBLE,
    RAISE6SECACTUALAVAILABILITY DOUBLE,
    RAISE60SECACTUALAVAILABILITY DOUBLE,
    RAISE5MINACTUALAVAILABILITY DOUBLE,
    RAISEREGACTUALAVAILABILITY DOUBLE,
    LOWER6SECACTUALAVAILABILITY DOUBLE,
    LOWER60SECACTUALAVAILABILITY DOUBLE,
    LOWER5MINACTUALAVAILABILITY DOUBLE,
    LOWERREGACTUALAVAILABILITY DOUBLE,
    LORSURPLUS DOUBLE,
    LRCSURPLUS DOUBLE,
    "week" DOUBLE,
    file VARCHAR,
    PRIORITY INTEGER,
    SETTLEMENTDATE TIMESTAMP WITH TIME ZONE,
    date DATE,
    "YEAR" BIGINT
);



CREATE TEMP TABLE IF NOT EXISTS scada_today_temp(
  DUID VARCHAR,
  INITIALMW DOUBLE,
  INTERVENTION DOUBLE,
  SETTLEMENTDATE TIMESTAMP WITH TIME ZONE,
  date DATE,
  file VARCHAR,
  PRIORITY INTEGER,
  "YEAR" BIGINT
);

CREATE TABLE price_today_temp(
  DISPATCH VARCHAR,
  RUNNO VARCHAR,
  REGIONID VARCHAR,
  DISPATCHINTERVAL VARCHAR,
  INTERVENTION VARCHAR,
  RRP VARCHAR,
  EEP VARCHAR,
  ROP VARCHAR,
  APCFLAG VARCHAR,
  MARKETSUSPENDEDFLAG VARCHAR,
  LASTCHANGED VARCHAR,
  RAISE6SECRRP VARCHAR,
  RAISE6SECROP VARCHAR,
  RAISE6SECAPCFLAG VARCHAR,
  RAISE60SECRRP VARCHAR,
  RAISE60SECROP VARCHAR,
  RAISE60SECAPCFLAG VARCHAR,
  RAISE5MINRRP VARCHAR,
  RAISE5MINROP VARCHAR,
  RAISE5MINAPCFLAG VARCHAR,
  RAISEREGRRP VARCHAR,
  RAISEREGROP VARCHAR,
  RAISEREGAPCFLAG VARCHAR,
  LOWER6SECRRP VARCHAR,
  LOWER6SECROP VARCHAR,
  LOWER6SECAPCFLAG VARCHAR,
  LOWER60SECRRP VARCHAR,
  LOWER60SECROP VARCHAR,
  LOWER60SECAPCFLAG VARCHAR,
  LOWER5MINRRP VARCHAR,
  LOWER5MINROP VARCHAR,
  LOWER5MINAPCFLAG VARCHAR,
  LOWERREGRRP VARCHAR,
  LOWERREGROP VARCHAR,
  LOWERREGAPCFLAG VARCHAR,
  PRICE_STATUS VARCHAR,
  PRE_AP_ENERGY_PRICE VARCHAR,
  PRE_AP_RAISE6_PRICE VARCHAR,
  PRE_AP_RAISE60_PRICE VARCHAR,
  PRE_AP_RAISE5MIN_PRICE VARCHAR,
  PRE_AP_RAISEREG_PRICE VARCHAR,
  PRE_AP_LOWER6_PRICE VARCHAR,
  PRE_AP_LOWER60_PRICE VARCHAR,
  PRE_AP_LOWER5MIN_PRICE VARCHAR,
  PRE_AP_LOWERREG_PRICE VARCHAR,
  RAISE1SECRRP VARCHAR,
  RAISE1SECROP VARCHAR,
  RAISE1SECAPCFLAG VARCHAR,
  LOWER1SECRRP VARCHAR,
  LOWER1SECROP VARCHAR,
  LOWER1SECAPCFLAG VARCHAR,
  PRE_AP_RAISE1_PRICE VARCHAR,
  PRE_AP_LOWER1_PRICE VARCHAR,
  CUMUL_PRE_AP_ENERGY_PRICE VARCHAR,
  CUMUL_PRE_AP_RAISE6_PRICE VARCHAR,
  CUMUL_PRE_AP_RAISE60_PRICE VARCHAR,
  CUMUL_PRE_AP_RAISE5MIN_PRICE VARCHAR,
  CUMUL_PRE_AP_RAISEREG_PRICE VARCHAR,
  CUMUL_PRE_AP_LOWER6_PRICE VARCHAR,
  CUMUL_PRE_AP_LOWER60_PRICE VARCHAR,
  CUMUL_PRE_AP_LOWER5MIN_PRICE VARCHAR,
  CUMUL_PRE_AP_LOWERREG_PRICE VARCHAR,
  CUMUL_PRE_AP_RAISE1_PRICE VARCHAR,
  CUMUL_PRE_AP_LOWER1_PRICE VARCHAR,
  OCD_STATUS VARCHAR,
  MII_STATUS VARCHAR,
  "week" VARCHAR,
  xx DOUBLE,
  RUNNO_1 DOUBLE,
  DISPATCHINTERVAL_1 DOUBLE,
  INTERVENTION_1 DOUBLE,
  RRP_1 DOUBLE,
  EEP_1 DOUBLE,
  ROP_1 DOUBLE,
  APCFLAG_1 DOUBLE,
  MARKETSUSPENDEDFLAG_1 DOUBLE,
  RAISE6SECRRP_1 DOUBLE,
  RAISE6SECROP_1 DOUBLE,
  RAISE6SECAPCFLAG_1 DOUBLE,
  RAISE60SECRRP_1 DOUBLE,
  RAISE60SECROP_1 DOUBLE,
  RAISE60SECAPCFLAG_1 DOUBLE,
  RAISE5MINRRP_1 DOUBLE,
  RAISE5MINROP_1 DOUBLE,
  RAISE5MINAPCFLAG_1 DOUBLE,
  RAISEREGRRP_1 DOUBLE,
  RAISEREGROP_1 DOUBLE,
  RAISEREGAPCFLAG_1 DOUBLE,
  LOWER6SECRRP_1 DOUBLE,
  LOWER6SECROP_1 DOUBLE,
  LOWER6SECAPCFLAG_1 DOUBLE,
  LOWER60SECRRP_1 DOUBLE,
  LOWER60SECROP_1 DOUBLE,
  LOWER60SECAPCFLAG_1 DOUBLE,
  LOWER5MINRRP_1 DOUBLE,
  LOWER5MINROP_1 DOUBLE,
  LOWER5MINAPCFLAG_1 DOUBLE,
  LOWERREGRRP_1 DOUBLE,
  LOWERREGROP_1 DOUBLE,
  LOWERREGAPCFLAG_1 DOUBLE,
  PRE_AP_ENERGY_PRICE_1 DOUBLE,
  PRE_AP_RAISE6_PRICE_1 DOUBLE,
  PRE_AP_RAISE60_PRICE_1 DOUBLE,
  PRE_AP_RAISE5MIN_PRICE_1 DOUBLE,
  PRE_AP_RAISEREG_PRICE_1 DOUBLE,
  PRE_AP_LOWER6_PRICE_1 DOUBLE,
  PRE_AP_LOWER60_PRICE_1 DOUBLE,
  PRE_AP_LOWER5MIN_PRICE_1 DOUBLE,
  PRE_AP_LOWERREG_PRICE_1 DOUBLE,
  RAISE1SECRRP_1 DOUBLE,
  RAISE1SECROP_1 DOUBLE,
  RAISE1SECAPCFLAG_1 DOUBLE,
  LOWER1SECRRP_1 DOUBLE,
  LOWER1SECROP_1 DOUBLE,
  LOWER1SECAPCFLAG_1 DOUBLE,
  PRE_AP_RAISE1_PRICE_1 DOUBLE,
  PRE_AP_LOWER1_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_ENERGY_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_RAISE6_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_RAISE60_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_RAISE5MIN_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_RAISEREG_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_LOWER6_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_LOWER60_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_LOWER5MIN_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_LOWERREG_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_RAISE1_PRICE_1 DOUBLE,
  CUMUL_PRE_AP_LOWER1_PRICE_1 DOUBLE,
  week_1 DOUBLE,
  SETTLEMENTDATE TIMESTAMP WITH TIME ZONE,
  date DATE,
  file VARCHAR,
  PRIORITY INTEGER,
  "YEAR" BIGINT
);
----------------------------------------------------------------
copy ( from scada_temp) to '/lakehouse/default/Files/scada' (format parquet,PER_THREAD_OUTPUT,OVERWRITE_OR_IGNORE ) ;
DROP table IF EXISTS scada_temp;

copy ( from price_temp) to '/lakehouse/default/Files/price' (format parquet,PER_THREAD_OUTPUT,OVERWRITE_OR_IGNORE ) ;
DROP table IF EXISTS price_temp;

copy ( from scada_today_temp) to '/lakehouse/default/Files/scada_today' (format parquet,PER_THREAD_OUTPUT,OVERWRITE_OR_IGNORE ) ;
DROP table IF EXISTS scada_today_temp;

copy ( from price_today_temp) to '/lakehouse/default/Files/price_today' (format parquet,PER_THREAD_OUTPUT,OVERWRITE_OR_IGNORE ) ;
DROP table IF EXISTS price_today_temp;


---------------------------------------------------------------
CREATE or replace view price              as select * from parquet_scan('/lakehouse/default/Files/price/*.parquet');
CREATE or replace view scada              as select * from parquet_scan('/lakehouse/default/Files/scada/*.parquet');
CREATE or replace view scada_today        as select * from parquet_scan('/lakehouse/default/Files/scada_today/*.parquet');
CREATE or replace view price_today        as select * from parquet_scan('/lakehouse/default/Files/price_today/*.parquet');

-------------------------------------------------------------------------------------------------------------------------

SET VARIABLE list_of_files_price_today =
(
  WITH xxxx AS (
    SELECT
      concat('abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/', extracted_filepath) AS file
    FROM 'abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/Reports/Current/DispatchIS_Reports/download_log.csv'
    WHERE parse_filename(extracted_filepath) NOT IN (SELECT DISTINCT file FROM price_today)
    ORDER BY file
    LIMIT 1000
  )
  SELECT list(file) FROM xxxx
);

SET VARIABLE list_of_files_scada_today =
(
  WITH xxxx AS (
    SELECT
      concat('abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/', extracted_filepath) AS file
    FROM 'abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/Reports/Current/Dispatch_SCADA/download_log.csv'
    WHERE parse_filename(extracted_filepath) NOT IN (SELECT DISTINCT file FROM scada_today)
    ORDER BY file
    LIMIT 1000
  )
  SELECT list(file) FROM xxxx
);

SET VARIABLE list_of_files_scada =
(
  WITH xxxx AS (
    SELECT
      concat('abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/', extracted_filepath) AS file
    FROM 'abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/Reports/Current/Daily_Reports/download_log.csv'
    WHERE parse_filename(extracted_filepath) NOT IN (SELECT DISTINCT file FROM scada)
    ORDER BY file
    LIMIT 500
  )
  SELECT list(file) FROM xxxx
);


SET VARIABLE list_of_files_price =
(
  WITH xxxx AS (
    SELECT
      concat('abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/', extracted_filepath) AS file
    FROM 'abfss://udf@onelake.dfs.fabric.microsoft.com/data.Lakehouse/Files/Reports/Current/Daily_Reports/download_log.csv'
    WHERE parse_filename(extracted_filepath) NOT IN (SELECT DISTINCT file FROM price)
    ORDER BY file
    LIMIT 500
  )
  SELECT list(file) FROM xxxx
);